{"version":3,"file":"static/js/912.7f849096.chunk.js","mappings":"uMAMaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACnB,OACE,yBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAA1C,WACE,gBACES,MAAO,IACPC,IACEN,EAZK,kCAacA,EAdb,6DAiBRO,IAAKN,IAENA,MAXIF,EADC,KAkBjB,C,wHC3BYS,EAAY,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAEpC,OACE,+BACE,kBAAMD,SAAUA,EAAhB,WACE,kBAAOE,KAAK,OAAOC,KAAK,QAAQC,aAAcH,KAC9C,mBAAQC,KAAK,SAAb,uBAIP,E,UCiBD,EArBmB,WACjB,OAA4BG,EAAAA,EAAAA,UAAS,IAArC,eAAOnB,EAAP,KAAeoB,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMR,EAAQO,EAAaE,IAAI,UAC/BC,EAAAA,EAAAA,YAAU,WACJV,IACFW,EAAAA,EAAAA,IAAmBX,GAAOY,MAAK,SAAAC,GAAI,OAAIR,EAAUQ,EAAKC,QAAnB,GAEtC,GAAE,CAACd,IAKJ,OACE,iCACE,SAACF,EAAD,CAAWC,SANE,SAAAgB,GACfA,EAAEC,iBACFR,EAAgB,CAAER,MAAOe,EAAEE,OAAOC,SAASlB,MAAMmB,OAClD,EAGkCnB,MAAOA,IACrCf,EAAOmC,OAAS,IAAK,SAACpC,EAAA,EAAD,CAAYC,OAAQA,MAG/C,C,2MCvBKoC,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAGlB,IAAMC,EAAmB,mCAAG,oGACZD,IAAAA,IAAA,oCAAuCD,IAD3B,cACzBG,EADyB,yBAExBA,EAAKX,MAFmB,2CAAH,qDAKjBF,EAAkB,mCAAG,WAAMX,GAAN,uFACbsB,IAAAA,IAAA,gCACQD,EADR,kBACyBrB,IAFZ,cAC1BwB,EAD0B,yBAIzBA,EAAKX,MAJoB,2CAAH,sDAOlBY,EAAc,mCAAG,WAAMC,GAAN,uFACRJ,IAAAA,IAAA,iBAAoBI,EAApB,oBAAuCL,IAD/B,cACtBM,EADsB,yBAErBA,GAFqB,2CAAH,sDAMdC,EAAS,mCAAG,WAAMF,GAAN,uFACJJ,IAAAA,IAAA,iBAAoBI,EAApB,4BAA+CL,IAD3C,cACjBQ,EADiB,yBAEhBA,EAAKhB,MAFW,2CAAH,sDAITiB,EAAY,mCAAG,WAAMJ,GAAN,uFACJJ,IAAAA,IAAA,iBACVI,EADU,4BACiBL,IAFb,cACpBU,EADoB,yBAInBA,GAJmB,2CAAH,qD","sources":["components/MoviesList.jsx","components/SearchBar.jsx","pages/MoviesPage.jsx","services/fetchMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst defaultPoster = 'https://www.proficinema.ru/assets/images/cnt/poster_no.png'\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n  return (\n    <div>\n      {movies.map(({ id, poster_path, title }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              width={300}\n              src={ \n                poster_path\n                  ? BASE_IMG_URL + poster_path\n                  : defaultPoster\n              }\n              alt={title}\n            />\n            {title}\n          </Link>\n        </li>\n      ))}\n    </div>\n  );\n};\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};","\nexport const SearchBar = ({ onSubmit, query }) => {\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input type=\"text\" name=\"query\" defaultValue={query} />\n        <button type=\"submit\">Serch</button>\n      </form>\n    </>\n  );\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { MoviesList } from 'components/MoviesList';\nimport { SearchBar } from 'components/SearchBar';\nimport { fetchMoviesByQuery } from 'services/fetchMovies';\n\n\n const MoviePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  useEffect(() => {\n    if (query) {\n      fetchMoviesByQuery(query).then(data => setMovies(data.results));\n    }\n  }, [query]);\n  const onSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.elements.query.value });\n  };\n  return (\n    <>\n      <SearchBar onSubmit={onSubmit} query={query} />\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </>\n  );\n};\n\nexport default MoviePage;","import axios from 'axios';\n\n\nconst API_KEY = 'bfe20768c956c05046c7d088e4b361cd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n\nexport const fetchTrendingMovies = async () => {\n    const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return resp.data;\n  };\n\n  export const fetchMoviesByQuery = async query => {\n    const resp = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return resp.data;\n  };\n\n  export const fetchMovieById = async movieId => {\n    const movie = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return movie;\n  };\n\n\n  export const fetchCast = async movieId => {\n    const cast = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return cast.data;\n  };\n  export const fetchReviews = async movieId => {\n    const reviews = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return reviews;\n  };"],"names":["MoviesList","movies","location","useLocation","map","id","poster_path","title","to","state","from","width","src","alt","SearchBar","onSubmit","query","type","name","defaultValue","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchMoviesByQuery","then","data","results","e","preventDefault","target","elements","value","length","API_KEY","axios","fetchTrendingMovies","resp","fetchMovieById","movieId","movie","fetchCast","cast","fetchReviews","reviews"],"sourceRoot":""}