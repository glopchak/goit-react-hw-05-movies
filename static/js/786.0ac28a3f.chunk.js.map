{"version":3,"file":"static/js/786.0ac28a3f.chunk.js","mappings":"uOAKaA,EAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEzB,OACE,+BAEI,wBACGA,EAAKC,MAAM,EAAG,GAAGC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACpB,2BACE,gBACEC,IAAKH,EAXA,kCAW8BA,EAZ7B,6DAaNI,IAAKH,KAEP,uBAAIA,KACJ,uCAAeC,OANRH,EADW,OAc/B,ECND,EAbc,WACZ,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOX,EAAP,KAAaY,EAAb,KAIA,OAHAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUL,GAASM,MAAK,SAAAC,GAAI,OAAIJ,EAAQI,EAAKhB,KAAjB,GAC7B,GAAE,CAACS,KAEF,+BACE,SAACV,EAAD,CAAWC,KAAMA,KAGtB,C,2MCdKiB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAGlB,IAAMC,EAAmB,mCAAG,oGACZD,IAAAA,IAAA,oCAAuCD,IAD3B,cACzBD,EADyB,yBAExBA,EAAKI,MAFmB,2CAAH,qDAKjBC,EAAkB,mCAAG,WAAMC,GAAN,uFACbJ,IAAAA,IAAA,gCACQD,EADR,kBACyBK,IAFZ,cAC1BN,EAD0B,yBAIzBA,EAAKI,MAJoB,2CAAH,sDAOlBG,EAAc,mCAAG,WAAMd,GAAN,uFACRS,IAAAA,IAAA,iBAAoBT,EAApB,oBAAuCQ,IAD/B,cACtBO,EADsB,yBAErBA,GAFqB,2CAAH,sDAMdV,EAAS,mCAAG,WAAML,GAAN,uFACJS,IAAAA,IAAA,iBAAoBT,EAApB,4BAA+CQ,IAD3C,cACjBjB,EADiB,yBAEhBA,EAAKoB,MAFW,2CAAH,sDAITK,EAAY,mCAAG,WAAMhB,GAAN,uFACJS,IAAAA,IAAA,iBACVT,EADU,4BACiBQ,IAFb,cACpBS,EADoB,yBAInBA,GAJmB,2CAAH,qD","sources":["components/CastList.jsx","components/Cast.jsx","services/fetchMovies.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\nconst defaultPoster = 'https://www.proficinema.ru/assets/images/cnt/poster_no.png';\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport const CastList = ({ cast }) => {\n  \n  return (\n    <>\n      {\n        <ul>\n          {cast.slice(0, 4).map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={profile_path ? BASE_IMG_URL + profile_path : defaultPoster}\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      }\n    </>\n  );\n};\n\nCastList.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      character: PropTypes.string,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchCast } from 'services/fetchMovies';\nimport { CastList } from './CastList';\n\n\n const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  useEffect(() => {\n    fetchCast(movieId).then(resp => setCast(resp.cast));\n  }, [movieId]);\n  return (\n    <>\n      <CastList  cast={cast}/>\n    </>\n  );\n};\n\nexport default Cast;","import axios from 'axios';\n\n\nconst API_KEY = 'bfe20768c956c05046c7d088e4b361cd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n\nexport const fetchTrendingMovies = async () => {\n    const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return resp.data;\n  };\n\n  export const fetchMoviesByQuery = async query => {\n    const resp = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return resp.data;\n  };\n\n  export const fetchMovieById = async movieId => {\n    const movie = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return movie;\n  };\n\n\n  export const fetchCast = async movieId => {\n    const cast = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return cast.data;\n  };\n  export const fetchReviews = async movieId => {\n    const reviews = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return reviews;\n  };"],"names":["CastList","cast","slice","map","id","profile_path","name","character","src","alt","movieId","useParams","useState","setCast","useEffect","fetchCast","then","resp","API_KEY","axios","fetchTrendingMovies","data","fetchMoviesByQuery","query","fetchMovieById","movie","fetchReviews","reviews"],"sourceRoot":""}