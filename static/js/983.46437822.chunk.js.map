{"version":3,"file":"static/js/983.46437822.chunk.js","mappings":"yMAGaA,EAAMC,EAAAA,GAAAA,IAAH,qCACZC,EAAAA,GACAC,EAAAA,G,sGCHSC,EAAOH,EAAAA,EAAAA,GAAH,+SAIJ,SAAAI,GAAC,OAAIA,EAAEC,MAAMJ,MAAM,EAAlB,IAMH,SAAAG,GAAC,OAAIA,EAAEC,MAAMJ,MAAM,EAAlB,IAGM,SAAAG,GAAC,OAAIA,EAAEC,MAAMJ,MAAM,EAAlB,IAINK,EAAWN,EAAAA,EAAAA,GAAH,sJACJ,SAAAI,GAAC,OAAIA,EAAEC,MAAME,MAAMC,EAAlB,IACJ,SAAAJ,GAAC,OAAIA,EAAEC,MAAMI,WAAWC,SAAvB,IACT,SAAAN,GAAC,OAAIA,EAAEC,MAAMI,WAAWE,SAAvB,IAIW,SAAAP,GAAC,OAAIA,EAAEC,MAAMO,QAAQC,SAApB,IAGNC,EAAWd,EAAAA,EAAAA,EAAH,kLACJ,SAAAI,GAAC,OAAIA,EAAEC,MAAMU,YAAYC,IAAxB,IACH,SAAAZ,GAAC,OAAIA,EAAEC,MAAMY,UAAUC,CAAtB,IAEL,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,OAAOC,KAAnB,IACM,SAAAhB,GAAC,OAAIA,EAAEC,MAAMJ,MAAM,EAAlB,IACA,SAAAG,GAAC,OAAIA,EAAEC,MAAMJ,MAAM,EAAlB,IACA,SAAAG,GAAC,OAAIA,EAAEC,MAAMJ,MAAM,EAAlB,I,mBC5BRoB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MACnB,OACE,SAACzB,EAAA,EAAD,CAAK0B,QAAQ,OAAOC,GAAG,MAAMtB,EAAE,IAA/B,UACE,SAACD,EAAD,UACCmB,EAAOK,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAaT,EAApB,EAAoBA,MAApB,OACV,SAACd,EAAD,WACE,UAAC,KAAD,CAAMwB,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMT,GAA1C,WACE,gBACEU,MAAO,IACPC,IACEL,EAbK,kCAccA,EAfb,6DAkBRM,IAAKf,KAEP,SAACN,EAAD,UAAWM,QAXAQ,EADL,OAoBjB,C,kFChBC,UAbgB,WACd,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MAAsBC,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAKC,QAAnB,GAChC,GAAE,KAGD,iCACE,4CACA,SAAC,IAAD,CAAYpB,OAAQA,MAGzB,C,2MCbGqB,EAAU,mCAChBC,IAAAA,SAAAA,QAAyB,+BAGlB,IAAML,EAAmB,mCAAG,oGACZK,IAAAA,IAAA,oCAAuCD,IAD3B,cACzBE,EADyB,yBAExBA,EAAKJ,MAFmB,2CAAH,qDAKjBK,EAAkB,mCAAG,WAAMC,GAAN,uFACbH,IAAAA,IAAA,gCACQD,EADR,kBACyBI,IAFZ,cAC1BF,EAD0B,yBAIzBA,EAAKJ,MAJoB,2CAAH,sDAOlBO,EAAc,mCAAG,WAAMC,GAAN,uFACRL,IAAAA,IAAA,iBAAoBK,EAApB,oBAAuCN,IAD/B,cACtBO,EADsB,yBAErBA,GAFqB,2CAAH,sDAMdC,EAAS,mCAAG,WAAMF,GAAN,uFACJL,IAAAA,IAAA,iBAAoBK,EAApB,4BAA+CN,IAD3C,cACjBS,EADiB,yBAEhBA,EAAKX,MAFW,2CAAH,sDAITY,EAAY,mCAAG,WAAMJ,GAAN,uFACJL,IAAAA,IAAA,iBACVK,EADU,4BACiBN,IAFb,cACpBW,EADoB,yBAInBA,GAJmB,2CAAH,qD","sources":["components/Box.jsx","components/MoviesList/MoviesListStyled.styled.js","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx","services/fetchMovies.js"],"sourcesContent":["import styled from 'styled-components';\nimport { space, layout } from 'styled-system';\n\nexport const Box = styled.div`\n  ${space}\n  ${layout}\n`;","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 auto;\n  row-gap: ${p => p.theme.space[4]}px;\n\n  @media screen and (min-width: 320px) {\n    width: 100%;\n  }\n  @media screen and (min-width: 768px) {\n    gap: ${p => p.theme.space[5]}px;\n  }\n  @media screen and (min-width: 1280px) {\n    column-gap: ${p => p.theme.space[4]}px;\n  }\n`;\n\nexport const ListItem = styled.li`\nborder-radius: ${p => p.theme.radii.md};\ntransition: ${p => p.theme.transition.transform},\n    ${p => p.theme.transition.boxShadow};\n  &:hover,\n  &:focus {\n    transform: scale(1.03);\n    box-shadow: ${p => p.theme.shadows.cardHover};}\n`;\n\nexport const ImgTitle = styled.p`\n  font-weight: ${p => p.theme.fontWeights.bold};\n  font-size: ${p => p.theme.fontSizes.m};\n  line-height: 1.33;\n  color: ${p => p.theme.colors.title};\n  padding-left: ${p => p.theme.space[2]}px;\n  padding-right: ${p => p.theme.space[2]}px;\n  padding-bottom: ${p => p.theme.space[2]}px;\n  `","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { List, ListItem, ImgTitle} from './MoviesListStyled.styled';\nimport { Box } from 'components/Box';\n\nconst defaultPoster = 'https://www.proficinema.ru/assets/images/cnt/poster_no.png'\nconst BASE_IMG_URL = 'https://image.tmdb.org/t/p/w300';\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n  return (\n    <Box display=\"flex\" as=\"div\" p=\"4\">\n      <List>\n      {movies.map(({ id, poster_path, title }) => (\n        <ListItem key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            <img\n              width={300}\n              src={ \n                poster_path\n                  ? BASE_IMG_URL + poster_path\n                  : defaultPoster\n              }\n              alt={title}\n            />\n            <ImgTitle>{title}</ImgTitle>\n          </Link>\n        </ListItem>\n      ))}\n    </List>\n    </Box>\n    \n  );\n};\n\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      poster_path: PropTypes.string,\n      title: PropTypes.string,\n    })\n  ),\n};","import {useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from \"services/fetchMovies\";\nimport {MoviesList} from 'components/MoviesList/MoviesList'\n\n const HomePage = () => {\n    const [movies, setMovies] = useState([]);\n    useEffect(() => {\n      fetchTrendingMovies().then(data => setMovies(data.results));\n    }, []);\n  \n    return (\n      <>\n        <h1>Trending today</h1>\n        <MoviesList movies={movies} />\n      </>\n    );\n  };\n  export default HomePage;\n","import axios from 'axios';\n\n\nconst API_KEY = 'bfe20768c956c05046c7d088e4b361cd';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n\nexport const fetchTrendingMovies = async () => {\n    const resp = await axios.get(`/trending/all/day?api_key=${API_KEY}`);\n    return resp.data;\n  };\n\n  export const fetchMoviesByQuery = async query => {\n    const resp = await axios.get(\n      `/search/movie?api_key=${API_KEY}&query=${query}`\n    );\n    return resp.data;\n  };\n\n  export const fetchMovieById = async movieId => {\n    const movie = await axios.get(`/movie/${movieId}?api_key=${API_KEY}`);\n    return movie;\n  };\n\n\n  export const fetchCast = async movieId => {\n    const cast = await axios.get(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return cast.data;\n  };\n  export const fetchReviews = async movieId => {\n    const reviews = await axios.get(\n      `/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return reviews;\n  };"],"names":["Box","styled","space","layout","List","p","theme","ListItem","radii","md","transition","transform","boxShadow","shadows","cardHover","ImgTitle","fontWeights","bold","fontSizes","m","colors","title","MoviesList","movies","location","useLocation","display","as","map","id","poster_path","to","state","from","width","src","alt","useState","setMovies","useEffect","fetchTrendingMovies","then","data","results","API_KEY","axios","resp","fetchMoviesByQuery","query","fetchMovieById","movieId","movie","fetchCast","cast","fetchReviews","reviews"],"sourceRoot":""}